name: Setup EC2 for Nitric Deployment
on:
  workflow_dispatch: #  Allows manually triggering the workflow from the GitHub Actions UI
  push:
    branches:
      - main #  Automatically triggers the workflow when code is pushed to the `main` branch

jobs:
  ec2-setup: # job name: "ec2-setup" - responsible for configuring the EC2 instance
    runs-on: ubuntu-latest #  Runs this job on GitHub's hosted runner with Ubuntu environment

    env:
      EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }} #  Public IP of your EC2 instance (stored securely in GitHub Secrets)
      EC2_SSH_USER: ${{ secrets.EC2_SSH_USER }} #  SSH username (e.g., ubuntu, ec2-user) stored in Secrets
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }} #  Private SSH key to access EC2 stored as a GitHub secret

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3 # Checks out your GitHub repository's content onto the runner so scripts can be accessed

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh                           # Create the .ssh directory if it doesn't exist
          echo "${EC2_SSH_KEY}" > ~/.ssh/id_rsa     # Save the private SSH key into a file for SSH usage
          chmod 600 ~/.ssh/id_rsa                   # Secure the private key so only the user can read/write it
          ssh-keyscan -H "$EC2_PUBLIC_IP" >> ~/.ssh/known_hosts  #  Pre-approve the EC2 host fingerprint to avoid interactive prompt

      - name: Install Python dependencies
        run: pip install dagger-io #  Installs the Dagger Python SDK so it can be used in the setup script

      - name: Run EC2 setup pipeline
        run: |
          python AppAWSDeploy/dagger_EC2_prereq_setup.py   #  Executes your custom EC2 setup script written in Python (using Dagger)
